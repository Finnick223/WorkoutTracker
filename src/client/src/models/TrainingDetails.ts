/* tslint:disable */
/* eslint-disable */
/**
 * WorkoutTracker
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Exercise } from './Exercise';
import {
    ExerciseFromJSON,
    ExerciseFromJSONTyped,
    ExerciseToJSON,
} from './Exercise';
import type { TrainingCategory } from './TrainingCategory';
import {
    TrainingCategoryFromJSON,
    TrainingCategoryFromJSONTyped,
    TrainingCategoryToJSON,
} from './TrainingCategory';

/**
 * 
 * @export
 * @interface TrainingDetails
 */
export interface TrainingDetails {
    /**
     * 
     * @type {string}
     * @memberof TrainingDetails
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof TrainingDetails
     */
    createdOn?: string;
    /**
     * 
     * @type {string}
     * @memberof TrainingDetails
     */
    modifiedOn?: string;
    /**
     * 
     * @type {string}
     * @memberof TrainingDetails
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof TrainingDetails
     */
    description?: string;
    /**
     * 
     * @type {Array<Exercise>}
     * @memberof TrainingDetails
     */
    exercises?: Array<Exercise>;
    /**
     * 
     * @type {Array<TrainingCategory>}
     * @memberof TrainingDetails
     */
    trainingCategories?: Array<TrainingCategory>;
}

/**
 * Check if a given object implements the TrainingDetails interface.
 */
export function instanceOfTrainingDetails(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TrainingDetailsFromJSON(json: any): TrainingDetails {
    return TrainingDetailsFromJSONTyped(json, false);
}

export function TrainingDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrainingDetails {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'createdOn': !exists(json, 'createdOn') ? undefined : json['createdOn'],
        'modifiedOn': !exists(json, 'modifiedOn') ? undefined : json['modifiedOn'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'exercises': !exists(json, 'exercises') ? undefined : ((json['exercises'] as Array<any>).map(ExerciseFromJSON)),
        'trainingCategories': !exists(json, 'trainingCategories') ? undefined : ((json['trainingCategories'] as Array<any>).map(TrainingCategoryFromJSON)),
    };
}

export function TrainingDetailsToJSON(value?: TrainingDetails | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'createdOn': value.createdOn,
        'modifiedOn': value.modifiedOn,
        'name': value.name,
        'description': value.description,
        'exercises': value.exercises === undefined ? undefined : ((value.exercises as Array<any>).map(ExerciseToJSON)),
        'trainingCategories': value.trainingCategories === undefined ? undefined : ((value.trainingCategories as Array<any>).map(TrainingCategoryToJSON)),
    };
}

